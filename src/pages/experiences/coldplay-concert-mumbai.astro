---
import Layout from '../../layouts/Layout.astro';
---

<Layout 
  title="Coldplay Concert in Mumbai | Slow Travel with Pankhuri and Kaushal"
  description="Our magical experience attending the Coldplay concert at DY Patil Stadium in Mumbai in January 2025."
>
  <main class="py-12 bg-gray-100">
    <div class="container mx-auto px-4 max-w-4xl">
      <!-- Header -->
      <div class="mb-8 text-center">
        <h1 class="text-4xl md:text-5xl font-bold mb-4 text-black">A Magical Night with Coldplay in Mumbai</h1>
        <div class="flex items-center justify-center text-gray-600 mb-6">
          <span class="mr-4 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            March 20, 2025
          </span>
          <span class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
            Mumbai, India
          </span>
        </div>
      </div>
      
      <!-- Hero Image -->
      <div class="mb-12 aspect-[16/9] bg-gray-200 rounded-xl overflow-hidden">
        <img 
          src="/images/experiences/coldplay/coldplay1.webp" 
          srcset="/images/experiences/coldplay/coldplay1.webp 1200w,
                  /images/experiences/coldplay/coldplay1-800w.webp 800w,
                  /images/experiences/coldplay/coldplay1-400w.webp 400w"
          sizes="(max-width: 768px) 100vw, 1200px"
          alt="Coldplay Concert in Mumbai" 
          class="w-full h-full object-cover"
          width="1200" 
          height="675"
          loading="eager" />
      </div>
      
      <!-- Article Content -->
      <div class="prose prose-lg max-w-none">
        <p class="lead text-xl text-black">
          There are some experiences in life that remain etched in your memory forever. Attending Coldplay's concert at DY Patil Stadium in Mumbai in January 2025 was definitely one of those magical moments for us.
        </p>
        
        <h2 class="text-2xl font-bold mt-8 mb-4 text-black">The Anticipation</h2>
        <p class="text-black">
          I had been counting down the days to this concert for months. As long-time Coldplay fans, we knew this would be special, but nothing prepared us for just how incredible the evening would turn out to be. The excitement was palpable as we drove all the way from Powai to DY Patil Stadium. We were so eager that we arrived ridiculously early—at around 3:30 PM for a concert that wouldn't start until 7:00 PM.
        </p>
        
        <div class="grid grid-cols-2 gap-4 my-8">
          <div class="aspect-[4/3] bg-gray-200 rounded-lg overflow-hidden">
            <img 
              src="/images/experiences/coldplay/coldplay2.webp" 
              srcset="/images/experiences/coldplay/coldplay2.webp 800w,
                      /images/experiences/coldplay/coldplay2-400w.webp 400w"
              sizes="(max-width: 768px) 100vw, 400px"
              alt="Arriving at the concert" 
              class="w-full h-full object-cover"
              width="800" 
              height="600" 
              loading="lazy" />
          </div>
          <div class="aspect-[4/3] bg-gray-200 rounded-lg overflow-hidden">
            <img 
              src="/images/experiences/coldplay/coldplay3.webp" 
              srcset="/images/experiences/coldplay/coldplay3.webp 800w,
                      /images/experiences/coldplay/coldplay3-400w.webp 400w"
              sizes="(max-width: 768px) 100vw, 400px"
              alt="LED Wristbands" 
              class="w-full h-full object-cover"
              width="800" 
              height="600" 
              loading="lazy" />
          </div>
        </div>
        
        <h2 class="text-2xl font-bold mt-8 mb-4 text-black">Pre-Concert Vibes</h2>
        <p class="text-black">
          Parking wasn't an issue at all, which was a pleasant surprise for such a massive event. We parked at Raheja and made our way to the stadium. Upon entering, we were handed colorful LED wristbands that would later play a crucial role in the concert's immersive experience. We had reserved seats rather than standing tickets, which gave us a spectacular panoramic view of the entire stadium.
        </p>
        <p class="text-black">
          With several hours to kill before the main act, we settled in, got our food and drinks, and soaked up the growing excitement around us. The stadium gradually filled with thousands of fans, all buzzing with anticipation. There's something beautiful about being in a space where everyone shares the same passion for music.
        </p>
        
        <h2 class="text-2xl font-bold mt-8 mb-4 text-black">Opening Acts</h2>
        <p class="text-black">
          Before Coldplay took the stage, we were treated to performances by some incredible artists. Elyanna was absolutely mind-blowing—her powerful vocals resonated throughout the stadium and set the perfect tone for the evening. She was followed by Jasleen Royal, who's best performance came on the Indian version of We Pray. These opening acts weren't just fillers; they were carefully chosen artists who complemented what was to come.
        </p>
        
        <h2 class="text-2xl font-bold mt-8 mb-4 text-black">The Main Event</h2>
        <p class="text-black">
          When Coldplay finally took the stage, the stadium erupted. The band played around 14 to 15 songs during their two-hour set, covering everything from classics like "Yellow" and "The Scientist" to newer hits. Chris Martin's energy was infectious as he ran across the stage, engaging with fans from all angles. The production value was extraordinary—lasers, confetti, massive balloons bouncing through the crowd, and of course, those LED wristbands that synchronized with the music, turning the entire stadium into a dynamic light show.
        </p>
        
        <h2 class="text-2xl font-bold mt-8 mb-4 text-black">A Magical Atmosphere</h2>
        <p class="text-black">
          What made this concert truly special wasn't just the music but the collective experience. There's something profound about singing your favorite songs alongside thousands of strangers, all connected by the same melodies. The wristbands transformed us from individual spectators into a living, breathing part of the show—a ocean of pulsating lights moving in harmony with the music.
        </p>
        <p class="text-black">
          During "Fix You," the entire stadium was lit up with twinkling lights from the wristbands, creating a night sky effect that was nothing short of magical. When confetti exploded during "A Sky Full of Stars," it felt like we were inside a beautiful dream. These moments of collective joy are rare and precious.
        </p>
        
        <h2 class="text-2xl font-bold mt-8 mb-4 text-black">Final Thoughts</h2>
        <p class="text-black">
          As we drove back home that night, still buzzing from the experience, I couldn't help but reflect on how music has this incredible power to create moments of pure happiness. The Coldplay concert at DY Patil Stadium was genuinely one of the most fun evenings of my life—a perfect blend of music, atmosphere, and shared experience.
        </p>
        <p class="text-black">
          If you ever get the chance to see Coldplay live, don't hesitate. Some experiences are worth every penny, and this was definitely one of them. The memories of that magical January night in Mumbai will stay with me forever.
        </p>
        
        <div class="flex justify-center mt-12 mb-16">
          <a href="/experiences" class="inline-flex items-center text-primary-600 font-medium hover:text-primary-700">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
            </svg>
            Back to Experiences
          </a>
        </div>
      </div>

      <!-- Comments Section -->
      <div class="border-t border-gray-200 pt-10 mt-8">
        <h2 class="text-2xl font-bold mb-6 text-black">Comments</h2>
        
        <!-- Comment Form -->
        <div class="bg-white p-6 rounded-lg shadow-md mb-8">
          <form id="comment-form" class="space-y-4">
            <div>
              <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Name</label>
              <input type="text" id="name" name="name" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500">
            </div>
            <div>
              <label for="comment" class="block text-sm font-medium text-gray-700 mb-1">Comment</label>
              <textarea id="comment" name="comment" rows="4" required class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-primary-500 focus:border-primary-500"></textarea>
            </div>
            <button type="submit" class="px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors">
              Post Comment
            </button>
          </form>
        </div>
        
        <!-- Comments List -->
        <div id="comments-list" class="space-y-6">
          <!-- Comments will be displayed here -->
        </div>
      </div>
    </div>
  </main>

  <!-- Custom Notification Popup -->
  <div id="notification-popup" class="fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50 transition-opacity duration-300 opacity-0 pointer-events-none">
    <div class="bg-white rounded-xl shadow-xl p-6 max-w-md w-full mx-4 transform transition-transform duration-300 scale-95">
      <div class="text-center">
        <div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-green-100 mb-4">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
          </svg>
        </div>
        <h3 class="text-xl font-bold text-gray-900 mb-2">Thank You!</h3>
        <p class="text-gray-600 mb-6">Your comment has been posted successfully.</p>
        <button id="popup-close-btn" class="w-full px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors">
          Okay
        </button>
      </div>
    </div>
  </div>

  <script defer>
    // Initialize comments only when user scrolls to them
    let commentsLoaded = false;
    
    document.addEventListener('DOMContentLoaded', function() {
      // Set up lazy loading for comments section
      const commentsSection = document.querySelector('.border-t.border-gray-200');
      
      // Use Intersection Observer to detect when comments section is visible
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting && !commentsLoaded) {
            initializeComments();
            commentsLoaded = true;
            observer.disconnect(); // No need to observe anymore
          }
        });
      }, {
        rootMargin: '100px', // Load a bit before it comes into view
      });
      
      observer.observe(commentsSection);
      
      // Initialize popup functionality right away (it's lightweight)
      setupNotificationPopup();
    });
    
    // Setup notification popup
    function setupNotificationPopup() {
      const notificationPopup = document.getElementById('notification-popup');
      const popupCloseBtn = document.getElementById('popup-close-btn');
      
      // Close popup when the button is clicked
      popupCloseBtn.addEventListener('click', () => hideNotification(notificationPopup));
      
      // Close popup when clicking outside
      notificationPopup.addEventListener('click', function(e) {
        if (e.target === notificationPopup) {
          hideNotification(notificationPopup);
        }
      });
      
      // Close popup when Escape key is pressed
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && !notificationPopup.classList.contains('opacity-0')) {
          hideNotification(notificationPopup);
        }
      });
    }
    
    // Function to show the notification popup
    function showNotification(popup = document.getElementById('notification-popup')) {
      popup.classList.remove('opacity-0', 'pointer-events-none');
      popup.classList.add('opacity-100');
      document.querySelector('#notification-popup > div').classList.remove('scale-95');
      document.querySelector('#notification-popup > div').classList.add('scale-100');
      document.body.style.overflow = 'hidden'; // Prevent scrolling
    }
    
    // Function to hide the notification popup
    function hideNotification(popup = document.getElementById('notification-popup')) {
      popup.classList.remove('opacity-100');
      popup.classList.add('opacity-0', 'pointer-events-none');
      document.querySelector('#notification-popup > div').classList.remove('scale-100');
      document.querySelector('#notification-popup > div').classList.add('scale-95');
      document.body.style.overflow = ''; // Allow scrolling again
    }

    // Initialize comments functionality
    function initializeComments() {
      console.log('Initializing comments section...');
      
      // Initialize Netlify Identity if available
      if (typeof netlifyIdentity !== 'undefined') {
        netlifyIdentity.on('init', user => {
          if (user) {
            document.getElementById('name').value = user.user_metadata.full_name || '';
          }
        });
      }
      
      // Load existing comments
      fetchComments();
      
      // Set up the comment form submission
      const commentForm = document.getElementById('comment-form');
      commentForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const name = document.getElementById('name').value;
        const commentText = document.getElementById('comment').value;
        const timestamp = new Date().toISOString();
        const page = window.location.pathname;
        
        // Create comment object
        const commentData = {
          name,
          comment: commentText,
          timestamp,
          page
        };
        
        try {
          // Call Netlify function to save comment
          await saveComment(commentData);
          
          // Clear form
          document.getElementById('comment').value = '';
          
          // Refresh comments
          fetchComments();
          
          // Show custom notification popup
          showNotification();
        } catch (error) {
          console.error('Error posting comment:', error);
          alert('There was an error posting your comment. Please try again.');
        }
      });
    }

    // Function to fetch comments
    async function fetchComments() {
      const page = window.location.pathname;
      const commentsContainer = document.getElementById('comments-list');
      
      try {
        // For local testing, use localStorage
        let comments = [];
        if (window.localStorage) {
          const storedComments = localStorage.getItem('pageComments-' + page);
          if (storedComments) {
            comments = JSON.parse(storedComments).filter(c => c.page === page);
          }
        }
        
        // Clear existing comments
        commentsContainer.innerHTML = '';
        
        if (comments.length === 0) {
          commentsContainer.innerHTML = '<p class="text-gray-500 italic">Be the first to comment!</p>';
          return;
        }
        
        // Sort comments by timestamp (newest first)
        comments.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));
        
        // Render comments
        comments.forEach(comment => {
          const commentEl = document.createElement('div');
          commentEl.className = 'bg-white p-6 rounded-lg shadow-sm';
          
          const date = new Date(comment.timestamp);
          const formattedDate = date.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          });
          
          commentEl.innerHTML = `
            <div class="flex items-center mb-4">
              <div class="bg-primary-100 text-primary-800 rounded-full w-10 h-10 flex items-center justify-center font-bold">
                ${comment.name.charAt(0).toUpperCase()}
              </div>
              <div class="ml-4">
                <h4 class="font-bold text-gray-900">${escape(comment.name)}</h4>
                <p class="text-sm text-gray-500">${formattedDate}</p>
              </div>
            </div>
            <p class="text-gray-700">${escape(comment.comment)}</p>
          `;
          
          commentsContainer.appendChild(commentEl);
        });
      } catch (error) {
        console.error('Error fetching comments:', error);
        commentsContainer.innerHTML = '<p class="text-red-500">Error loading comments. Please refresh the page.</p>';
      }
    }
    
    // Function to save a comment (using localStorage for now)
    async function saveComment(commentData) {
      // For local testing, use localStorage
      if (window.localStorage) {
        const page = window.location.pathname;
        const storedComments = localStorage.getItem('pageComments-' + page) || '[]';
        const comments = JSON.parse(storedComments);
        comments.push(commentData);
        localStorage.setItem('pageComments-' + page, JSON.stringify(comments));
        return { success: true };
      }
      
      // In production, this would call a Netlify function
      // return fetch('/.netlify/functions/save-comment', {
      //   method: 'POST',
      //   headers: { 'Content-Type': 'application/json' },
      //   body: JSON.stringify(commentData)
      // }).then(response => response.json());
    }
    
    // Helper function to escape HTML (prevent XSS)
    function escape(html) {
      const div = document.createElement('div');
      div.textContent = html;
      return div.innerHTML;
    }
  </script>
</Layout> 